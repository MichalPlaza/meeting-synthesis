[project]
name = "meeting-synthesis-backend"
version = "0.1.0"
description = "Backend for the Meeting Synthesis application, providing API and core logic for meeting analysis and knowledge management."
authors = [
    {name = "mplazax", email = "twoj.prawdziwy.email@example.com"} # Zaktualizuj email
]

requires-python = ">=3.11, <4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn (>=0.34.3,<0.35.0)",
    "pydantic (>=2.11.5,<3.0.0)",
    "motor (>=3.7.1,<4.0.0)",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)"
]

[tool.poetry]
packages = [{include = "app", from = "."}]

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.12"
mypy = "^1.16.0"
pytest = "^8.3.5"
pytest-asyncio = "^1.0.0"
httpx = "^0.28.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
select = ["E", "F", "W", "I", "N", "D", "UP", "ANN", "Q"]
ignore = ["D203", "D212"] # Przykładowe ignorowane
line-length = 88
src = ["app"]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "venv",
    "backend/.venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "*/migrations/*",
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true # Na początku może być pomocne

plugins = ["pydantic.mypy"]
mypy_path = "app"